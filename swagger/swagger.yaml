consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  CreateUserUserPayload:
    example:
      email: Eos magnam fugit.
      password: Reiciendis aliquid ex minus minima ea atque.
      username: Voluptatem sit culpa perspiciatis rerum laboriosam.
    properties:
      email:
        description: User email
        example: Eos magnam fugit.
        type: string
      password:
        description: User password
        example: Reiciendis aliquid ex minus minima ea atque.
        type: string
      username:
        description: User name
        example: Voluptatem sit culpa perspiciatis rerum laboriosam.
        type: string
    title: CreateUserUserPayload
    type: object
  ExampleUser:
    description: User (default view)
    example:
      email: Vero in.
      id: 2.953614e+17
      username: Et et est qui eaque in corporis.
    properties:
      email:
        description: User email
        example: Vero in.
        type: string
      id:
        description: User ID
        example: 2.953614e+17
        format: int64
        type: integer
      username:
        description: User name
        example: Et et est qui eaque in corporis.
        type: string
    title: 'Mediatype identifier: application/example.user+json; view=default'
    type: object
host: localhost:8080
info:
  description: Goa user example description
  title: Goa user example title
  version: ""
paths:
  /user:
    post:
      description: Create user with POST method
      operationId: user#CreateUser
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserUserPayload'
      produces:
      - application/example.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ExampleUser'
        "400":
          description: Bad Request
      schemes:
      - http
      summary: CreateUser user
      tags:
      - user
  /user/{userID}:
    get:
      description: Returns user by ID
      operationId: user#GetUser
      parameters:
      - description: user ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/example.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ExampleUser'
        "404":
          description: Not Found
      schemes:
      - http
      summary: GetUser user
      tags:
      - user
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  BadRequest:
    description: Bad Request
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/ExampleUser'
schemes:
- http
swagger: "2.0"
